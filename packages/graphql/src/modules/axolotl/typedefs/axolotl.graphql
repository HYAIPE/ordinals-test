input AxolotlRequest {
  claimingAddress: String!
  network: BitcoinNetwork!
  feeLevel: FeeLevel
  feePerByte: Int
  collectionId: ID!
}

type AxolotlFunding {
  id: ID!
  inscriptionFunding: InscriptionFunding

  tokenId: Int!
  createdAt: String!
  originAddress: String!
  chameleon: Boolean!
}

type AxolotlFundingPage {
  items: [AxolotlFunding]
  totalCount: Int!
  page: Int!
  cursor: String
}

input AxolotlAvailableFundingRequest {
  claimingAddress: String!
  collectionId: ID!
}

enum FundingStatus {
  UNVERIFIED
  UNCLAIMED
  FUNDING
  FUNDED
  GENESIS
  REVEAL
}

type AxolotlAvailableFunding {
  id: ID!
  destinationAddress: String!
  claimingAddress: String!
  status: FundingStatus!
  network: BitcoinNetwork
  funding: InscriptionFunding
}

type Mutation {
  requestFundingAddress(request: InscriptionRequest!): InscriptionFunding!
  axolotlFundingAddressRequest(request: AxolotlRequest!): [AxolotlFunding!]!
  axolotlAvailableFundingAddresses(
    request: AxolotlAvailableFundingRequest!
  ): [AxolotlAvailableFunding!]!
}
