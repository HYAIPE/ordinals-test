input AxolotlClaimRequest {
  claimingAddress: String!
  network: BitcoinNetwork!
  feeLevel: FeeLevel
  feePerByte: Int
  collectionId: ID!
}

input AxolotlOpenEditionRequest {
  destinationAddress: String!
  claimCount: Int
  network: BitcoinNetwork!
  feeLevel: FeeLevel
  feePerByte: Int
  collectionId: ID!
}

type AxolotlFunding {
  id: ID!

  inscriptionFunding: InscriptionFunding

  tokenIds: [Int!]!

  destinationAddress: String!
}

type AxolotlProblem {
  code: String!
  message: String!
}

type AxolotlOpenEditionResponse {
  problems: [AxolotlProblem!]
  data: AxolotlFunding
}

type AxolotlFundingPage {
  items: [AxolotlFunding]
  totalCount: Int!
  page: Int!
  cursor: String
}

input AxolotlAvailableClaimedRequest {
  claimingAddress: String!
  collectionId: ID!
}

input AxolotlAvailableOpenEditionRequest {
  destinationAddress: String
  collectionId: ID!
}

type AxolotlAvailableClaimedFunding {
  id: ID!
  destinationAddress: String!
  claimingAddress: String!
  status: FundingStatus!
  network: BitcoinNetwork
  funding: InscriptionFunding
  tokenId: Int
}

type AxolotlAvailableOpenEditionFunding {
  id: ID!
  destinationAddress: String!
  status: FundingStatus!
  network: BitcoinNetwork
  funding: InscriptionFunding
  tokenIds: [Int!]!
}

type AxolotlFeeEstimate {
  tipPerTokenSats: Int!
  tipPerTokenBtc: String!
  totalInscriptionSats: Int!
  totalInscriptionBtc: String!
  totalFeeSats: Int!
  totalFeeBtc: String!
  feePerByte: Int!
}

type Mutation {
  #requestFundingAddress(request: InscriptionRequest!): InscriptionFunding!
  #axolotlFundingClaimRequest(request: AxolotlClaimRequest!): [AxolotlFunding!]!
  axolotlFundingOpenEditionRequest(
    request: AxolotlOpenEditionRequest!
  ): AxolotlOpenEditionResponse!
}

type Query {
  # axolotlAvailableClaimedFundingClaims(
  #   request: AxolotlAvailableClaimedRequest!
  # ): [AxolotlAvailableClaimedFunding!]!
  axolotlAvailableOpenEditionFundingClaims(
    request: AxolotlAvailableOpenEditionRequest!
  ): [AxolotlAvailableOpenEditionFunding!]!
  axolotlEstimateFee(
    network: BitcoinNetwork!
    feeLevel: FeeLevel
    feePerByte: Int
    count: Int
  ): AxolotlFeeEstimate!
}
